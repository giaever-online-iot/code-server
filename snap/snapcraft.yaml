name: code-server
base: core24
adopt-info: code-server
summary: Run VS Code on any machine anywhere and access it in the browser.
description: |
  - Code on any device with a consistent development environment
  - Use cloud servers to speed up tests, compilations, downloads, and more
  - Preserve battery life when you're on the go; all intensive tasks run on your server

  **NOTE!** This is an early release of `code-server`. The whole package might change.
  Use at your own risk.

  **DISCLAIMER** The developer of this package is not affiliated or closely associated 
  with Coder Tech. Inc., the developers behind `code-server`. However we try to keep it 
  as close to original as possible, with the limitations a (strictly confined) snap will
  give.

  **Plugs**
  - vscs-content: Connect other snap pacakges to this package, e.g

    ```
    sudo snap connect code-server:vscs-content home-assistant-snap:vscs-content
    ```

    Make configurations of Home Assistant available in `code-server`, but this is only
    available for the daemon or root user, and not when executing `code-server` as a
    normal user.

  **Documentation?**
  https://coder.com/docs/code-server/v4.89.1

  **Something doesn't work?**
  https://github.com/home-assistant-snap/code-server/issues

  Feel free to help out and PR :)
license: MIT
grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

platforms:
  amd64:
  arm64:
  armhf:

apps:
  daemon:
    daemon: simple
    command: lib/node_modules/code-server/node_modules/.bin/code-server
    command-chain: 
      - env/env-wrapper
    plugs:
      - home
      - network
      - network-bind
      - removable-media

  code-server:
    command: lib/node_modules/code-server/node_modules/.bin/code-server
    command-chain: 
      - env/env-wrapper
    plugs:
      - home
      - network
      - network-bind
      - removable-media

plugs:
  vscs-content:
    interface: content
    target: $SNAP_COMMON/plugged

layout:
  /usr/lib/git-core:
    symlink: $SNAP/usr/lib/git-core
  /etc/shells:
    bind-file: $SNAP/shells

parts:
  code-server:
    after: [nodejs]
    plugin: nil
    build-packages:
      - build-essential
      - pkg-config
      - python3
      - libkrb5-dev
    override-build: |
      npm install --verbose --unsafe-perm code-server
      mkdir -p $CRAFT_PART_INSTALL/lib/node_modules \
        && cp --archive --link --no-dereference $CRAFT_PART_BUILD \
          $CRAFT_PART_INSTALL/lib/node_modules/code-server
      craftctl set version="$(npm info code-server version)"

    stage:
      - -bin/corepack
      - -bin/npx
      - -lib/node_modules/corepack
      - -lib/node_modules/npx

  dependencies:
    plugin: nil
    stage-packages:
      - git
      - git-all # Add submodules etc?
      - openssh-client
      - screen
      - libatomic1

  env-wrapper:
    plugin: dump
    source: src/

  nodejs:
    plugin: dump
    source:
      - on amd64: https://nodejs.org/dist/v20.16.0/node-v20.16.0-linux-x64.tar.gz
      - on arm64: https://nodejs.org/dist/v20.16.0/node-v20.16.0-linux-arm64.tar.gz
      - on armhf: https://nodejs.org/dist/v20.16.0/node-v20.16.0-linux-armv7l.tar.gz
    organize:
      '*.md' : nodejs/
      LICENSE : nodejs/
    prime:
      - -include
      - -share
      - -lib/node_modules/corepack
